<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Config
scr_config()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug

global.debug = ds_map_create();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create internet

var internet = scr_create_component(
    scr_component("internet", "lösch mich bloß nicht", obj_component_internet, 0, 1, 10000),
    noone
);

internet.x = x;
internet.y = y;

var connection = internet.downlinks[| 0];
var firewall = scr_create_component(global.components_firewall[0], connection);

connection = firewall.downlinks[| 0];
var sw = scr_create_component(global.components_splitter[1], connection);

connection = sw.downlinks[| 0];
var sw2 = scr_create_component(global.components_splitter[1], connection);

connection = sw.downlinks[| 1];
var sw3 = scr_create_component(global.components_splitter[1], connection);

connection = sw2.downlinks[| 0];
scr_create_component(global.components_server[0], connection);
connection = sw2.downlinks[| 1];
scr_create_component(global.components_server[0], connection);
connection = sw2.downlinks[| 2];
scr_create_component(global.components_server[0], connection);

connection = sw3.downlinks[| 0];
scr_create_component(global.components_server[0], connection);

clear_debug();
scr_position_components(internet);

show_debug_message("width: " + string(scr_component_width(sw)));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///News
scr_news_init()
scr_news_post("News", "bla bla bla")
scr_news_post("&lt;XML 3rr0r&gt;", "Help! Ich stecke in der#Nachrichtenzeile fest!")
scr_news_post("News2", "blub")
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// View Move and Zoom

mouse_previous_x = 0;
mouse_previous_y = 0;
vx = view_xview[0];
vy = view_yview[0];
zoom = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Unselect components

if (mouse_check_button_pressed(mb_left)) {
    global.selected_component = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// View Move

var mx = display_mouse_get_x();
var my = display_mouse_get_y();

if (!mouse_check_button_pressed(mb_middle)
&amp;&amp;  mouse_check_button(mb_middle)) {
    vx -= (mx - mouse_previous_x) * view_wview[0] / room_width;
    vy -= (my - mouse_previous_y) * view_wview[0] / room_width;
}

mouse_previous_x = mx;
mouse_previous_y = my;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// View Zoom

var factor = 0.1;
zoom += (mouse_wheel_down() - mouse_wheel_up()) * factor * zoom;

zoom = clamp(zoom, 0.1, 3);

view_xview[0] = vx + room_width * (1 - zoom) / 2;
view_yview[0] = vy + room_height * (1 - zoom) / 2;
view_wview[0] = room_width * zoom;
view_hview[0] = room_height * zoom;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///News
scr_news_draw()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Selected Component Information
draw_text(10, 565, "Item Description")

if (global.selected_component != noone) {
    var comp = global.selected_component;
    draw_text(10,585,"Name: " + comp.data[component_struct.name])
    //draw_text(10,605,"Threads: " + string(comp.slots_used) + "/" + string(comp.data[component_struct.slots_available]))
    switch(comp.object_index) {
        case obj_component_server:
            draw_text(10,605,"Threads: " + string(comp.slots_used) + "/" + string(comp.data[component_struct.slots_available]))
            for (var i = 0; i &lt; array_length_1d(threads); i++){
                draw_rectangle(15+i*16, 625, 30+i*16, 640, false)
            }
            break;
        case obj_component_queue:
            draw_text(10,605,"Enqueued: " + string(ds_queue_size(comp.queue)) + "/" + string(comp.capacity))
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug

for (var i = 0; i &lt; instance_count; ++i) {
    var instance = instance_id[i];
    draw_text(instance.x, instance.y, debug_get(instance));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
