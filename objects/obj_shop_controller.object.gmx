<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shop
scr_shop_init();

routes = ds_stack_create();

var route = scr_shop_route(
    shop_type.category,
    scr_categories_to_items(global.shop_categories)
);

ds_stack_push(routes, route);

alarm[0]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Daily Costs
alarm[0] = DAY_DURATION * room_speed

var message = "";
var total = 0;
var amount;
amount = instance_number(obj_component_server)
if (amount &gt; 0) {
    message += "#Servers: " + string(amount) + "* TODO"
    total += amount //* component.cost
}
amount = instance_number(obj_component_switch)
if (amount &gt; 0) {
    message += "#Switches: " + string(amount) + "* TODO"
    total += amount //* component.cost
}
amount = instance_number(obj_component_firewall)
if (amount &gt; 0) {
    message += "#Firewalls: " + string(amount) + "* TODO"
    total += amount //* component.cost
}
var amount = instance_number(obj_component_queue)
if (amount &gt; 0) {
    message += "#Queues: " + string(amount) + "* TODO"
    total += amount //* component.cost
}

message += "#Total: " + string(total)

with(obj_controller) scr_news_post("Daily Costs", message)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Shop Drag Drop and clicking

if (mouse_check_button_pressed(mb_left)) {
    var route = ds_stack_top(routes);
    var item = scr_shop_get_hovered_item(route[shop_route.items]);
    var type = route[shop_route.type];
    
    if (is_array(item)) {
        var data = item[shop_item.additional_data];
        
        if (type == shop_type.category) {
            ds_stack_push(routes, scr_shop_route(
                shop_type.component,
                scr_components_to_items(data[category.components])
            ));
        }
        else if (type == shop_type.component) {
            if (is_array(data)) {
                scr_drag_component(data);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shop

var route = ds_stack_top(routes)
scr_shop_draw(route);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Back button

if (ds_stack_size(routes) &gt; 1) {
    var text = "Back";
    
    var xx = 964;
    var yy = 555;
    var padding = 10;
    var w = string_width(text) + padding * 2;
    var h = string_height(text) + padding * 2;
    
    draw_set_colour(c_white);
    draw_rectangle(xx, yy, xx + w, yy + h, false);
    
    draw_set_colour(c_black);
    draw_text(xx + padding, yy + padding, text);
    
    // Click and Hover Event (should be in Step)
    var hovering = point_in_rectangle(window_mouse_get_x(), window_mouse_get_y(), xx, yy, xx + w, yy + h);
    if (hovering) {
        draw_set_colour(c_gray);
        draw_rectangle(xx, yy, xx + w, yy + h, true);
        
        if (mouse_check_button_pressed(mb_left)) {
            scr_shop_back();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
